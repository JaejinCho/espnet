55a56,58
> # rnnlm related
> lm_weight=0.4
> 
192,197d194
<    for rtask in ${recog_set}; do
<         feat_recog_dir=${dumpdir}/${rtask}/delta${do_delta}; mkdir -p ${feat_recog_dir}
<         dump.sh --cmd "$train_cmd" --nj 40 --do_delta $do_delta \
<             data/${rtask}/feats.scp data/${train_set}/cmvn.ark exp/dump_feats/recog/${rtask} \
<             ${feat_recog_dir}
<     done
223a221,251
> # You can skip this and remove --rnnlm option in the recognition (stage 5)
> lmexpdir=exp/train_rnnlm_2layer_bs256
> mkdir -p ${lmexpdir}
> if [ ${stage} -le 3 ]; then
>     echo "stage 3: LM Preparation"
>     lmdatadir=data/local/lm_train
>     mkdir -p ${lmdatadir}
>     text2token.py -s 1 -n 1 data/${train_set}/text | cut -f 2- -d" " | perl -pe 's/\n/ <eos> /g' \
>         > ${lmdatadir}/train.txt
>     text2token.py -s 1 -n 1 data/${train_dev}/text | cut -f 2- -d" " | perl -pe 's/\n/ <eos> /g' \
>         > ${lmdatadir}/valid.txt
>     # use only 1 gpu
>     if [ ${ngpu} -gt 1 ]; then
>         echo "LM training does not support multi-gpu. signle gpu will be used."
>         lmngpu=1
>     else
>         lmngpu=${ngpu}
>     fi
>     ${cuda_cmd} ${lmexpdir}/train.log \
>         lm_train.py \
>         --ngpu ${lmngpu} \
>         --backend ${backend} \
>         --verbose 1 \
>         --outdir ${lmexpdir} \
>         --train-label ${lmdatadir}/train.txt \
>         --valid-label ${lmdatadir}/valid.txt \
>         --epoch 40 \
>         --batchsize 256 \
>         --dict ${dict}
> fi
> 
234,235c262,263
< if [ ${stage} -le 3 ]; then
<     echo "stage 3: Network Training"
---
> if [ ${stage} -le 4 ]; then
>     echo "stage 4: Network Training"
247,248c275,278
<         --train-json ${feat_tr_dir}/data.json \
<         --valid-json ${feat_dt_dir}/data.json \
---
>         --train-feat scp:${feat_tr_dir}/feats.scp \
>         --valid-feat scp:${feat_dt_dir}/feats.scp \
>         --train-label ${feat_tr_dir}/data.json \
>         --valid-label ${feat_dt_dir}/data.json \
267,268c297,298
< if [ ${stage} -le 4 ]; then
<     echo "stage 4: Decoding"
---
> if [ ${stage} -le 5 ]; then
>     echo "stage 5: Decoding"
274d303
<         feat_recog_dir=${dumpdir}/${rtask}/delta${do_delta}
281,285c310,317
<          # make json labels for recognition
<         for j in `seq 1 ${nj}`; do
<             data2json.sh --feat ${feat_recog_dir}/feats.scp --nlsyms ${nlsyms} \
<                 ${sdata}/${j} ${dict} > ${sdata}/${j}/data.json
<         done
---
>         # feature extraction
>         feats="ark,s,cs:apply-cmvn --norm-vars=true data/${train_set}/cmvn.ark scp:${sdata}/JOB/feats.scp ark:- |"
>         if ${do_delta}; then
>         feats="$feats add-deltas ark:- ark:- |"
>         fi
> 
>         # make json labels for recognition
>         data2json.sh --nlsyms ${nlsyms} ${data} ${dict} > ${data}/data.json
294c326,327
<             --recog-json ${sdata}/JOB/data.json \
---
>             --recog-feat "$feats" \
>             --recog-label ${data}/data.json \
302a336,337
>             --rnnlm ${lmexpdir}/rnnlm.model.best \
>             --lm-weight ${lm_weight} \
